name: RDP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configurar RDP y Firewall
        run: |
          # Habilitar RDP y desactivar autenticación a nivel de red
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force

          # Configurar firewall para permitir RDP
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389

          # Reiniciar servicio de RDP
          Restart-Service -Name TermService -Force

      - name: Crear cuenta RDP fija
        run: |
          $username = "Juan"
          $password = "Juan"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          if (-not (Get-LocalUser -Name $username)) {
              New-LocalUser -Name $username -Password $securePass -AccountNeverExpires
              Add-LocalGroupMember -Group "Administrators" -Member $username
              Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username
          }

          echo "RDP_CREDS=Usuario: $username | Contraseña: $password" >> $env:GITHUB_ENV

      - name: Instalar Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"

          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Conectar Tailscale
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-${{ github.run_id }}

          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }

          if (-not $tsIP) {
              Write-Error "Tailscale no asignó IP. Abortando."
              exit 1
          }

          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Verificar acceso RDP
        run: |
          Write-Host "IP Tailscale: $env:TAILSCALE_IP"
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) {
              Write-Error "No se pudo conectar al puerto 3389"
              exit 1
          }
          Write-Host "¡Conexión TCP exitosa al puerto RDP!"

      - name: Mantener sesión activa
        run: |
          Write-Host "`n=== ACCESO RDP ==="
          Write-Host "Dirección: $env:TAILSCALE_IP"
          Write-Host "Usuario: Juan"
          Write-Host "Contraseña: Juan"
          Write-Host "==================`n"

          while ($true) {
              Write-Host "[$(Get-Date)] RDP activo - Usa Ctrl+C para terminar"
              Start-Sleep -Seconds 300
          }
